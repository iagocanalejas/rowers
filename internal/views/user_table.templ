package views

import (
	"rowers/internal/database"
	"strconv"
	"fmt"
)

templ UserTable(users []database.User) {
	@Index() {
		@UserForm()
		<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
			<table class="w-full text-left text-sm text-gray-500">
				<thead class="bg-gray-50 text-xs uppercase text-gray-700">
					<tr>
						<th scope="col" class="py-3 ps-6">
							Nombre
						</th>
						<th scope="col" class="max-w-8 py-3 ps-6">
							Peso
						</th>
						<th scope="col" class="max-w-10 py-3 ps-6">
							Asistencia
						</th>
						<th scope="col" class="max-w-2 ps-6"></th>
						<th scope="col" class="max-w-2"></th>
					</tr>
				</thead>
				<tbody id="users_container">
					for _, user:= range users {
						@UserRow(user)
					}
				</tbody>
			</table>
		</div>
	}
}

func userRowId(userID int64, isDefinition bool) string {
	if isDefinition {
		return fmt.Sprintf("user_row_%d", userID)
	}
	return fmt.Sprintf("#user_row_%d", userID)
}

templ UserRow(user database.User) {
	<tr id={ userRowId(user.ID, true) } class="border-b bg-white">
		<td scope="row" class="whitespace-nowrap px-6 py-4 font-medium text-gray-900">
			{ user.FirstName } { user.LastName }
		</td>
		<td class="max-w-8 px-6 py-4">
			if user.Weight != nil {
				{ strconv.FormatFloat(*user.Weight, 'f', 2, 32) }
			}
		</td>
		<td class="max-w-10 px-6 py-4">
			100|100
		</td>
		<td class="w-10">
			<button
				class="rounded-full p-2 text-red-600 hover:bg-red-300"
				hx-trigger="click once"
				hx-confirm="Estas seguro de eliminar?"
				hx-delete={ fmt.Sprintf("/users/%d", user.ID) }
				hx-target={ userRowId(user.ID, false) }
			>
				<img src="/dist/trash.svg"/>
			</button>
		</td>
		<td class="w-10">
			<button
				class="rounded-full p-2 hover:bg-gray-300"
				hx-trigger="click once"
				hx-get={ fmt.Sprintf("/users/%d", user.ID) }
			>
				<img src="/dist/arrow_right.svg" class="w-5 -rotate-90"/>
			</button>
		</td>
	</tr>
}
