package views

import (
	"rowers/internal/database"
	"strconv"
)

templ UserForm() {
	@Collapsible("Añadir Deportista") {
		<form
			id="users-form"
			hx-post="/users"
			hx-target="#users-container"
			hx-swap="beforeend"
			hx-ext="json-enc"
			hx-on::after-request="this.reset()"
		>
			<div class="mb-6 grid gap-6">
				<div>
					<label for="first_name" class="mb-2 block text-sm font-medium text-gray-900">Nombre:</label>
					<input
						id="first_name"
						name="first_name"
						type="text"
						placeholder="Nombre"
						class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500"
					/>
				</div>
				<div>
					<label for="last_name" class="mb-2 block text-sm font-medium text-gray-900">Apellidos:</label>
					<input
						id="last_name"
						name="last_name"
						type="text"
						placeholder="Apellidos"
						class="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500"
					/>
				</div>
				<div class="text-right">
					<button
						type="reset"
						class="w-full rounded-lg bg-red-600 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-4 focus:ring-red-300 sm:w-auto"
						onclick="htmx.trigger('#users-form', 'htmx:abort')"
					>
						Cancel
					</button>
					<button
						type="submit"
						class="w-full rounded-lg bg-blue-600 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-4 focus:ring-blue-300 sm:w-auto"
					>
						Añadir
					</button>
				</div>
			</div>
		</form>
	}
}

templ UserRow(user database.User) {
	<tr
		id={ "row_" + strconv.FormatInt(user.Id, 10) }
		class="border-b odd:bg-white even:bg-gray-50"
	>
		<th scope="row" class="whitespace-nowrap px-6 py-4 font-medium text-gray-900">
			{ user.FirstName } { user.LastName }
		</th>
		<td class="max-w-8 px-6 py-4">
			if user.Weight != nil {
				{ strconv.FormatFloat(*user.Weight, 'f', 2, 32) }
			}
		</td>
		<td class="max-w-10 px-6 py-4">
			100|100
		</td>
		<td class="max-w-28 w-5 px-6 py-4">
			<button
				class="bg-transprent py-2 text-sm font-medium text-red-600 outline-none hover:underline focus:outline-none"
				hx-delete={ "/users/" + strconv.FormatInt(user.Id, 10) }
				hx-target={ "#row_" + strconv.FormatInt(user.Id, 10) }
				hx-swap="delete"
			>
				Eliminar
			</button>
		</td>
	</tr>
}

templ Users(users []database.User) {
	@Index() {
		@UserForm()
		<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
			<table class="w-full text-left text-sm text-gray-500 rtl:text-right">
				<thead class="bg-gray-50 text-xs uppercase text-gray-700">
					<tr>
						<th scope="col" class="py-3 ps-6">
							Nombre
						</th>
						<th scope="col" class="max-w-8 py-3 ps-6">
							Peso
						</th>
						<th scope="col" class="max-w-10 py-3 ps-6">
							Asistencia
						</th>
						<th scope="col" class="max-w-28 ps-6"></th>
					</tr>
				</thead>
				<tbody id="users-container">
					for _, user:= range users {
						@UserRow(user)
					}
				</tbody>
			</table>
		</div>
	}
}
